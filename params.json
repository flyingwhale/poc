{"name":"Php Output Cache","body":"# POC\r\n\r\n[![Build Status](https://secure.travis-ci.org/tothimre/poc.png?branch=master)](http://travis-ci.org/tothimre/poc)\r\n\r\nThis is the root directory of the\r\nPOC that stands for PHP Output Caching.\r\n\r\nAn article about the \r\n    POC: http://www.leaseweblabs.com/2012/01/poc-flexible-php-output-caching/\r\n\r\n## Description\r\n\r\nThe aim of this project is to create an easy to use but really flexible generic \r\noutput caching component for  PHP applications. The framework is plugin based,\r\nso it is really easy to extend and use.\r\n\r\n## Features\r\n\r\n * Caching of the output on certain circumstances that you define\r\n * Cache invalidation by TTL (of course)\r\n * Blacklisting caches by application state.\r\n\r\n * For caching it utilizes many interface, those are:\r\n   * Memcached\r\n   * Redis\r\n   * MongoDb\r\n   * It's own filesystem based engine.\r\n\r\n * Plugins:\r\n   * Blacklisting by Output content (plugin)\r\n   * Html output minification (plugin)\r\n   * Logging with monolog (plugin) \r\n\r\n   * Cache tagging\r\n     * For this feature we utilize Doctrine2, Mysql and Sqlite is supported at the \r\n       moment\r\n     * Cache Invalidation by tags\r\n     * Minimal overhead on the performance\r\n     * Easy (one line) to turn off/on\r\n     * Controls headers\r\n\r\nEven more features are coming, so stay tuned.\r\n\r\n## Examples ##\r\nYou can download/see the https://github.com/tothimre/poc-sandbox project and\r\ninstall to your web directory (composer is your friend there as well:) ).\r\n\r\n## Installation ##\r\n\r\nThe project uses the composer to download it's dependencies and we already added \r\na script what you can execute by typing ./bin/get_composer scrip. It downloads \r\nthe composer.\r\n\r\nAs the projet is psr-0 compliant it is really easy to map it to your project. \r\nTo download the dependencies please run the \"./bin/get_composer\" file from the \r\nroot of the project or download the composer.phar for yourself.\r\nAfter run \"bin/composer.phar install\" script.\r\n\r\nIf you want to run unittests or want to improve or extend the framework then\r\nuse the following command:\r\n\"bin/composer.phar install --dev\"\r\n\r\n### Key-Value databases\r\n\r\nOf course you are not forced to use any external key-value databases,\r\nbecause it also supports the file system caching. But to make your application \r\nmore scalable you can user some more scalable solutions.\r\n\r\nFor instance You can install the redis-server, also  mongod (Mongodb) or \r\nof course Memcached server to your environment and the PHP module as well.\r\n\r\n### SQL ###\r\n\r\nAt the moment we only support Mysql, for the tagging feature, but as we \r\nimplemented it in Doctrine2 this is really likely that we will add more sql DBs\r\nTo this list in the close future.\r\nSo Install Mysql for the tagging feature.\r\n\r\n##Unittesting##\r\n\r\nThe Project already have got 75% code coverage. Of course we work hard on to \r\nimprove it and make it better. Also the unittests can be nice source of examples.\r\nFor instance this is highly recommended to check out the PocTest.php file to get\r\nmore insight on the POC.\r\n\r\n### Shortcuts ###\r\n\r\nThe project also contains a recent version of the PHPUnit framework. So you \r\ndon't need to prepare your environment to be suitable for this. By executing the\r\nvendor/bin/phpunit file you can run the tests.\r\n\r\n### Configuration ###\r\n\r\nAll PHPUnit configuration data can be found at the phpunit.xml.dist file. \r\nThe Mysql Database specific information also resides here for the tests If you \r\nwant to specify your own database. just copy this file to the phpunit.xml \r\nand modify the database specific parts.\r\n\r\n\r\n## COPYRIGHT ##\r\n\r\n### Copyright [2012] [Imre Toth <tothimre at gmail>] ###\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License\r\n","tagline":"Php Output Caching","note":"Don't delete this file! It's used internally to help with page regeneration.","google":""}